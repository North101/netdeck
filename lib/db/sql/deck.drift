import 'package:drift/drift.dart';
import '/db/types.dart';
import 'card.drift';
import 'faction.drift';
import 'side.drift';
import 'format.drift';
import 'rotation.drift';
import 'mwl.drift';

CREATE TABLE deck(
  id TEXT PRIMARY KEY NOT NULL,
  identity_code TEXT NOT NULL,
  format_code TEXT,
  rotation_code TEXT,
  mwl_code TEXT,

  name TEXT NOT NULL,
  description TEXT NOT NULL,
  created DATETIME NOT NULL,
  updated DATETIME NOT NULL,
  deleted BOOLEAN NOT NULL,
  remote_updated DATETIME,
  synced DATETIME
);

listDecks($where = TRUE) AS DeckResult:
SELECT
  deck.**,
  identity.**,
  pack.**,
  cycle.**,
  faction.**,
  side.**,
  type.**,
  subtype.**,
  format.**,
  rotation.**,
  mwl.**
FROM deck

INNER JOIN card AS identity
  ON identity.code = deck.identity_code

INNER JOIN pack
  ON pack.code = identity.pack_code

INNER JOIN cycle
  ON cycle.code = pack.cycle_code

INNER JOIN faction
  ON faction.code = identity.faction_code

INNER JOIN side
  ON side.code = faction.side_code

INNER JOIN type
  ON type.code = identity.type_code

LEFT JOIN type as subtype
  ON subtype.is_subtype
  AND (
    subtype.name = identity.keywords
    OR identity.keywords LIKE (subtype.name || ' - %')
  )

LEFT JOIN format
  ON format.code = deck.format_code

LEFT JOIN rotation_view AS rotation
  ON rotation.code = deck.rotation_code

LEFT JOIN mwl_view AS mwl
  ON mwl.code = deck.mwl_code

WHERE $where;

getDeckById:
SELECT *
FROM deck
WHERE id = :deckId;

deleteDecks:
DELETE FROM deck
WHERE id IN :deckIds;

getDeckFromData:
SELECT
  identity.**,
  pack.**,
  cycle.**,
  faction.**,
  side.**,
  type.**,
  subtype.**,
  format.**,
  rotation.**,
  mwl.**
FROM card AS identity

INNER JOIN pack
  ON pack.code = identity.pack_code

INNER JOIN cycle
  ON cycle.code = pack.cycle_code

INNER JOIN faction
  ON faction.code = identity.faction_code

INNER JOIN side
  ON side.code = faction.side_code

INNER JOIN type
  ON type.code = identity.type_code

LEFT JOIN type as subtype
  ON subtype.is_subtype
  AND (
    subtype.name = identity.keywords
    OR identity.keywords LIKE (subtype.name || ' - %')
  )

LEFT JOIN format
  ON format.code = :formatCode

LEFT JOIN rotation_view AS rotation
  ON rotation.code = :rotationCode

LEFT JOIN mwl_view AS mwl
  ON mwl.code = :mwlCode

WHERE identity.code = :identityCode;